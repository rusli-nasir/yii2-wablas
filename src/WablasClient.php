<?php


namespace ruslidev\wablas;


use GuzzleHttp\Client;
use GuzzleHttp\Exception\GuzzleException;
use GuzzleHttp\RequestOptions;
use Psr\Http\Message\StreamInterface;
use yii\base\Component;

class WablasClient extends Component
{
    public $wablasEndpoint = 'https://wablas.com/';
    public $apiToken;
    public $recipients = [];
    /**
     * @var $httpClient Client
     */
    private $httpClient;
    private $headers;

    public function init()
    {
        $this->headers = [
            'Accept' => 'application/json',
            'Authorization' => $this->apiToken,
        ];

        $this->httpClient = new Client([
            'base_uri' => $this->wablasEndpoint,
            'verify' => false
        ]);
        parent::init(); // TODO: Change the autogenerated stub
    }

//    public function __construct($apiToken) {
//        $this->apiToken = $api->apiToken;
//        $this->headers = [
//            'Accept' => 'application/json',
//            'Authorization' => $this->apiToken,
//        ];
//
//        $this->httpClient = new GuzzleClient([
//            'base_uri' => $this->wablasEndpoint
//        ]);
//
//    }

//    public function addRecipient($phoneNumber) {
//        $this->recipients[] = $phoneNumber;
//    }
    
    /**
     * @param $message
     * @param null $phoneNo
     * @param false $secret
     * @param false $priority
     * @param string $type
     * @return false|StreamInterface
     * @throws GuzzleException
     */
    public function sendMessage($message, $phoneNo = null, $secret = false, $priority = false, $type = 'random') {
        if (!empty($this->recipients) || $phoneNo) {
            $res = $this->httpClient->post('/api/send-message', [
                RequestOptions::HEADERS => $this->headers,
                RequestOptions::FORM_PARAMS => [
                    'phone'     => $phoneNo?:implode(", ", $this->recipients),
                    'message'   => $message,
                    'secret' => $secret, // or true
                    'priority' => $priority, // or true
                    'type'      => $type
                ],
            ]);
            \Yii::info($res->getBody(),'waBlastSendMessage');
            return $res->getBody();
        }
        return false;
    }

    public function sendImage($imageCaption, $phoneNo,$imageUrl ,$secret = false, $priority = false, $type = 'random') {
        if (!empty($this->recipients)) {
            $res = $this->httpClient->post('/api/send-image', [
                RequestOptions::HEADERS => $this->headers,
                RequestOptions::FORM_PARAMS => [
                    'phone'     => $phoneNo?:implode(", ", $this->recipients),
                    'caption'   => $imageCaption,
                    'image'     => $imageUrl,
                    'type'      => $type,
                    'secret' => $secret, // or true
                    'priority' => $priority, // or true
                ],
            ]);
            \Yii::info($res->getBody(),'waBlastSendImage');
            return $res->getBody();
        }
        return false;
    }
    
    /**
     * @param $docUrl
     * @param null $phoneNo
     * @param false $secret
     * @param false $priority
     * @param string $type
     * @return false|StreamInterface
     * @throws GuzzleException
     */
    public function sendDocumentUrl($docUrl, $phoneNo = null , $secret = false, $priority = false, $type = 'random') {
        if (!empty($this->recipients) || $phoneNo) {
            $res = $this->httpClient->post('/api/send-document', [
                RequestOptions::HEADERS => $this->headers,
                RequestOptions::FORM_PARAMS => [
                    'phone'     => $phoneNo?:implode(", ", $this->recipients),
                    'document'     => $docUrl,
                    'secret' => $secret, // or true
                    'priority' => $priority, // or true
                ],
            ]);
            \Yii::info($res->getBody(),'waBlastSendDocument');
            return $res->getBody();
        }
        return false;
    }
    
    /**
     * @param $file array
     * @param null $phoneNo
     * @param false $secret
     * @param false $priority
     * @param string $type
     * @return false|StreamInterface
     * @throws GuzzleException
     * @example $file = [
     *  'file' => dataFile,
     *  'data' => [
     *      'name' => image.jpg,
     *      'type' => 'image/jpeg',
     *      'size' => 1024,
     *
     *  ]
     * ]
     */
    public function sendDocumentFile($file, $phoneNo = null, $secret = false, $priority = false, $type = 'random') {
        if (!empty($this->recipients) || $phoneNo) {
            $res = $this->httpClient->post('/api/send-document-from-local', [
                RequestOptions::HEADERS => $this->headers,
                RequestOptions::FORM_PARAMS => [
                    'phone'     => $phoneNo?:implode(", ", $this->recipients),
                    'file'     => base64_encode($file['file']),
                    'data'     => json_encode($file['data']),
//                    'secret' => $secret, // or true
//                    'priority' => $priority, // or true
                ],
            ]);
            \Yii::info($res->getBody(),'waBlastSendDocument');
            return $res->getBody();
        }
        return false;
    }
}
